<%= stylesheet_link_tag "style-header.css" %>

<!-- if @current_user == 0 -->
<% if false %>
	<%= render "pages/signin" %>

<% else %> 
	<%= render "pages/navbar" %>

	<div class="container-fluide body-page" id="inside-page">
		<%= render "pages/log" %>
		<%= render "pages/live" %>
		<%= render "pages/play" %>
		<%= render "pages/guild" %>
		<%= render "pages/option" %>
		<%= render "pages/profil" %>
		<%= render "pages/tournament" %>
		<%= render "pages/war" %>
		<%= render "pages/all_guild" %>


		<%= render "pages/chat/param" %>
		<%= render "pages/chat/create" %>
		<%= render "pages/chat/main" %>
	</div>


<script>

// ******************************************** MODELS/COLLECTIONS ********************************************
//_____________________________________ User _____________________________________
var User = Backbone.Model.extend({
	urlRoot: "/users",

	defaults: {
		name: '',
		avatar: '',
		current_status: 'Online',
		points: 42,
		is_admin: true
	},

	initialize : function() {
		console.log("UserModel created");
	  },
});

var Users = Backbone.Collection.extend({
	modele: User,
	url: "/users",

	initialize : function() {
		console.log("UserCollection created");
	}
});

var usercollection = new Users();

//_____________________________________ Guild _____________________________________
var Guild = Backbone.Model.extend({
	urlRoot: "/guilds",

	defaults:{
		name: "",
		anagram: "",
		points:"",
		is_making_war:"",
		owner_id:"",
		created_at:"",
		updated_at:""
	}
});

var Guilds = Backbone.Collection.extend({
	model: Guild,
	url: "/guilds",

	initialize : function() {
		console.log("UserCollection created");
	}
});

var Guild_owner = Backbone.Model.extend({}); //model get_guild_owner

var guildcollection = new Guilds();



//******************************************** VIEWS ********************************************

//_____________________________________ LogView _____________________________________
var LogView = Backbone.View.extend({
	el : '#inside-page',
	template: _.template($('#log-template').html()),
	collection: usercollection,

	initialize : function() {
		console.log("LogView created");
		this.listenTo(this.collection, 'add remove', this.render, this);
		this.collection.url = "/users.json";
	  	this.collection.fetch({wait: true});
	  	console.log(this.collection.toJSON());
	},

	events: {
    	"click #add-user": "add",
    	"click #delete-user": "delete",
    	"click #logout ": "logout",
  	},

	render : function() {
	  	console.log("Render Log");
		this.$el.html(this.template({usr: this.collection.toJSON()}));
	  	return this;

	},

	add: function() {
		console.log("Add user");
		var user = new User({name : 'hemil', autre:'tete'});
		this.collection.create(user);
		this.render();
	 },
	 
  	delete: function() {
		console.log("Delete user");
		var users = this.collection.toJSON();
		var user = users[users.length - 1];
		if (user){
			var to_delete = this.collection.get(user.id);
	  		this.collection.url = "/users"
			to_delete.destroy();
	  		console.log(this.collection.toJSON());
			this.render();
		}	
	 },
	  
	logout: function() {
	//	this.collection.url = "/log_out";
	//	this.collection.fetch({wait: true});
		window.location.href = "http://localhost:3000/";
	},

})

//_____________________________________ ChatView _____________________________________
var ChatView = Backbone.View.extend({
	template_chat_main: _.template($('#chat_main-template').html()),
	template_chat_param: _.template($('#chat_param-template').html()),
	template_chat_create: _.template($('#chat_create-template').html()),
	
	events: {
		"click #main_chat_to_param": "render_chat_param",
		"click #main_chat_to_create": "render_chat_create",
		"click #back_to_main_chat": "render_chat_main"
	},

	render_chat_param : function() {
		this.$el.html(this.template_chat_param);
	},
	render_chat_create : function() {
		this.$el.html(this.template_chat_create);
	},
	render_chat_main : function() {
		this.$el.html(this.template_chat_main);
	}
});

var chatview = new ChatView();

//_____________________________________ GuildView _____________________________________
var GuildView = Backbone.View.extend({
	el : '#inside-page',
	template: _.template($('#guild-template').html()),
	template_all_guild: _.template($('#all_guild-template').html()),

	initialize : function() {
		console.log("GuildView created");
	},

	events: {
		"click #all_guild_btn": "render_all_guild",
		"click #back_to_guild": "render"
	},

	render : function() {
		this.$el.html(this.template);
		console.log("Render Guild");
		return this;
	},
	render_all_guild : function(){
		this.$el.html(this.template_all_guild);
		return this;
	}
})

//_____________________________________ LiveView _____________________________________
var LiveView = Backbone.View.extend({
	el : '#inside-page',
	template: _.template($('#live-template').html()),

	initialize : function() {
		console.log("LiveView created");
	},

	render : function() {
		this.$el.html(this.template);
        chatview.setElement("#live_chat_area").render_chat_main(); // https://solvemprobler.com/blog/2013/04/07/backbone-tips-rendering-views-and-their-childviews/
		console.log("Render Live");
		return this;
	},
})

//_____________________________________ OptionView _____________________________________
var OptionView = Backbone.View.extend({
	el : '#inside-page',
	template: _.template($('#option-template').html()),
  
	initialize : function() {
		console.log("OptionView created");
	},
  
	render : function() {
	  this.$el.html(this.template);
		console.log("Render Option");
		return this;
	}
});

//_____________________________________ PlayView _____________________________________
var PlayView = Backbone.View.extend({
	el : '#inside-page',
	template: _.template($('#play-template').html()),
	
	initialize : function() {
		console.log("PlayView created");
	},

	render : function() {
		this.$el.html(this.template);
		chatview.setElement("#play_chat_area").render_chat_main(); // https://solvemprobler.com/blog/2013/04/07/backbone-tips-rendering-views-and-their-childviews/
		console.log("Render Play");
		return this;
	}
})

//_____________________________________ ProfilView _____________________________________
var ProfilView = Backbone.View.extend({
	el : '#inside-page',
	template: _.template($('#profil-template').html()),
  
	initialize : function() {
		console.log("ProfilView created");
	},
  
	render : function() {
	  this.$el.html(this.template);
		console.log("Render Profil");
		return this;
	}
});

//_____________________________________ TournamentView _____________________________________
var TournamentView = Backbone.View.extend({
	el : '#inside-page',
	template: _.template($('#tournament-template').html()),
  
	initialize : function() {
		console.log("TournamentView created");
	},
  
	render : function() {
	  this.$el.html(this.template);
		console.log("Render Tournament");
		return this;
	}
});

//_____________________________________ WarView _____________________________________
var WarView = Backbone.View.extend({
	el : '#inside-page',
	template: _.template($('#war-template').html()),
	template_guilds: _.template($('#war-guild-template').html()),
	collection: guildcollection,

	initialize : function() {
		this.collection.url = "/guilds.json";
		guild_owner = new Guild_owner;
	},
	events: {
		"change #guild_drop_down": "render_guild_info"
	},

	render_guild_info : async function() {
		var guild_name = $("#guild_drop_down option:selected").text();
		var the_guild = this.collection.findWhere({name: guild_name});

		guild_owner.urlRoot = "guilds/get_guild_owner?id=" + the_guild.id;
		await guild_owner.fetch();
 
		this.$('.war_pannel_header').html(this.template_guilds(guild_owner.toJSON()));
	},

	render : async function() {
		await this.collection.fetch();

		if (this.collection.length == 0){
			model = new Guild;

			this.$el.html(this.template(model.toJSON()));
			$('#guild_drop_down').append(
				$('<option></option>').html(model.get("name"))
			);
			this.render_guild_info();
		}
		else {
			model = this.collection.first();
			
			this.$el.html(this.template());
			_.each(this.collection.toJSON(), function(model){
				$('#guild_drop_down').append(
					$('<option></option>').html(model.name)
				);
			});
			this.render_guild_info();
		}
		return this;
	}
});

//******************************************** ROUTER ********************************************
var logview = new LogView();
var liveview = new LiveView();
var playview = new PlayView();
var guildview = new GuildView();
var optionview = new OptionView();
var profilview = new ProfilView();
var tournamentview = new TournamentView();
var warview = new WarView();

var Router = Backbone.Router.extend({
	routes: {
		'': "ft_log",
		'live': "ft_live",
		'play': "ft_play",
		'guild': "ft_guild",
		'option': "ft_option",
		'profil': "ft_profil",
		'tournament': "ft_tournament",
		'war': "ft_war",
	},
	ft_log: function() {
		logview.render();
	},
	ft_live: function() {
		liveview.render();
	},
	ft_play: function() {
		playview.render();
	},
	ft_guild: function() {
		guildview.render();
	},
	ft_option: function() {
		optionview.render();
	},
	ft_profil: function() {
		profilview.render();
	},
	ft_tournament: function() {
		tournamentview.render();
	},
	ft_war: function() {
		warview.render();
	},
});

$( "#logo" ).on( "click", function() {
	Backbone.history.navigate("/", {trigger: true});
});
$( "#nav_to_live" ).on( "click", function() {
	Backbone.history.navigate("/live", {trigger: true});
});
$( "#nav_to_play" ).on( "click", function() {
	Backbone.history.navigate("/play", {trigger: true});
});
$( "#nav_to_guild" ).on( "click", function() {
	Backbone.history.navigate("/guild", {trigger: true});
});
$( "#nav_to_option" ).on( "click", function() {
	Backbone.history.navigate("/option", {trigger: true});
});
$( "#nav_to_profil" ).on( "click", function() {
	Backbone.history.navigate("/profil", {trigger: true});
});
$( "#nav_to_tournament" ).on( "click", function() {
	Backbone.history.navigate("/tournament", {trigger: true});
});
$( "#nav_to_war" ).on( "click", function() {
	Backbone.history.navigate("/war", {trigger: true});
});

var router = new Router();

Backbone.history.start();

</script>

<% end %>