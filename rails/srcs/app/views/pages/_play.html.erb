<script type="text/template" id="play-template">
<%= stylesheet_link_tag "style-live-play.css" %>

<div class="container-fluid container-live-play">
	<div class="row">
        <div  class="col text-center">
            <h1>Le play pong</h1>
            <canvas id="pong" width="800px" height="600px" >
                ton navigateur ne supporte pas canvas...
            </canvas>
        </div>
    	<div id ="pong-area">
    <!-- <button type="button" id="sign_in" class="btn btn-primary btn-lg btn-block btn-dark" onclick="new_game(<%=current_user.id%>)">PLAY</button> -->
    </div>
	<div class="col chat" id="chat_area">
    </div>
</div>
<script>
var current = <%== current_user.id%>;

//--------------------------- set the canvas for the game----------------------------------------------//
var canvas;
gamer = {
        //position
        x : 0, // pas responsive il s'agit de largeur (10px) '
        y : 0, // le 100 / 2 pas responsive correspond au paddle
        //form
        width : 10, // pas responsive
        height : 0, // pas responsive
        color : "GREY",
        score : 0
    }
function get_canvas()
{
    canvas = document.getElementById("pong");
    context = canvas.getContext("2d");
    canvas.style.cursor = "none";
    canvas.addEventListener("mousemove", movePaddle);
    canvas.addEventListener("mouseleave", triggerMouseOut);
    gamer.x = canvas.width - 10;
    gamer.y = canvas.height/2 - 100 /2;
    gamer.height = canvas.height/5;
}
var frame = 60;
var pause_gamer = false;
var limit_gamer = 0;
var pause = 0;

function movePaddle(event){ // function to permite to change the direction of the users paddle with the mouse
        if (pause_gamer != false)
        {
            limit_gamer = 0;
            pause  = 0;
            pause_gamer = false;
        }
        var rect = canvas.getBoundingClientRect();
        var result = 600 / (rect.bottom - rect.top);
        gamer.y = (event.clientY - rect.top -  20) * result;
    }

    function triggerMouseOut(event) {
        pause = 1;
    }

//-------------------------------------------------------------------------//

async function add_to_list(id)
{
    console.log("join list");
    player = new Player({user_id: id});
    await player.save();
    await playercollection.fetch();
    console.log(playercollection);
    listbtnview.setElement("#btn_match_making").render(); 
}

async function  quit_list(id)
{
    console.log("quit list");
    await playercollection.fetch();
    console.log(playercollection);
    var player = playercollection.findWhere({user_id: id});
    console.log(player);
    await Backbone.ajax({
			url: '/players/' + player.id + ".json",
			data: {},
			type: 'DELETE',
			dataType: 'json',
			success: function(response) {
				console.log("Inside success");
                ladderview.render();
			},
			error: function(){
				alert("error");
			}
		});
    console.log(playercollection);
}

//-------------------------------MAIN--------------------------------------//


get_canvas(canvas);

socket_notif.onmessage = function(event) {// this function check every message, for know if the message is for her, it check the guest params, if the guest params correspond to the curent id the guest it for her  
    const response = event.data;
    const msg = JSON.parse(response);
	    if (msg.type == "ping" || !msg.message)// dont check the ping message
            return ;
        if (msg.message.data.id_guest == current && msg.message.data.play) // read the second for understand this
        {
			// save_asking_battle(msg.message.data.id_gamer, msg.message.data.ask_id);
			playview.render();
            pongview.setElement("#pong-area").render(); // has the invitation is validate(value play is on true), the gamer is redirect to the gamerview
        }      
};




</script>
</script>