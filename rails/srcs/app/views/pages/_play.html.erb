<script type="text/template" id="play-template">
<%= stylesheet_link_tag "style-live-play.css" %>

<div class="container-fluid container-live-play">
	<div class="row">
    	<div id ="pong-area"  class="col text-center">
      		<h1>Le play pong</h1>
              <div class="dropdown">
                <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                select your contender !
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <% users = User.all%>
                <% users.each do |user| %>
                <%if (user.id != current_user.id)%>
                    <a class="dropdown-item" id=<%= user.id%> onclick="set_content(<%=user.id%>, <%= current_user.id%>)"> <%=user.name %></a>
                <%end %>
                <% end %>
            </div>
        </div>
	<button class="bt bt_add" id="play-game">PLAY</button>
    </div>
	<div class="col chat" id="chat_area">
    </div>
</div>
<script>
var guest_id = 0; // set a change in set_content
var host_id = 0; //set at 0 changer in set_content
var is_playing  = false;

function set_content(id, current_user) // set the host et guest id after the user host click on a user adversory
{
    guest_id = id;
    host_id = current_user;
    get_contender();
}

function get_contender()
{
    socket = new WebSocket("ws://localhost:3000/cable"); 
    socket.onopen=  function()
    {
        socket.send(JSON.stringify({
            command: "subscribe",
            identifier: JSON.stringify({
			channel: "PongnotChannel",
			pong_id: 0
    })
	}));
	ft_send();
    } 

    function ft_send()
    {
        socket.send(JSON.stringify({
            command: "message",
            identifier: JSON.stringify({
                channel: "PongnotChannel",
                pong_id: 0
                }),
                data: JSON.stringify({
                    data: {id_host: host_id, id_guest: guest_id}  // send a message to the guest for play with host, it's send his id et the id of the guest
                })
        }));
    }


socket.onmessage = function(event) {// this function check every message, for know if the message is for her, it check the guest params, if the guest params correspond to the host id the guest it for her  
const response = event.data;
const msg = JSON.parse(response);
	if (msg.type == "ping")// don't check the ping message
        return ;

    if (msg.message.data.id_guest == host_id && is_playing == false && msg.message.data.play) // read the second for understand this
    {
        pongview.setElement("#pong-area").render(); // has the invitation is validate(value play is on true), the host is redirect to the hostview
    }
    else if (msg.message.data.agree == "false" && msg.message.data.id_guest == host_id)
    {
        alert("the guest refused to play with you... sorry bro !");
    }
    else if (msg.message.data.id_guest == host_id && is_playing == false)// reveive the invitation, if the guest gamer is agree he send a message where play(value) is on true
    {
			var val = window.confirm("hey a new gamer want play with you !") ;
			is_playing = val; // ameliorer la boite de dialogue ici renvoi true car permet a ce que le joueur quand il joue ne soit pas importuner
			if (is_playing == true)
			{	
                socket.send(JSON.stringify({
                command: "message",
                identifier: JSON.stringify({
                channel: "PongnotChannel",
                pong_id: 0
            }),
            data: JSON.stringify({
                data: {play: "true", id_host: host_id, id_guest: guest_id}
            })
              }));
            pongguest.setElement("#pong-area").render(); // has the guest is agree it generate the guestview

           }
            else// possibility to send a message at the host player to said the invitation is refused by the guest player
			{
			socket.send(JSON.stringify({
            command: "message",
            identifier: JSON.stringify({
                channel: "PongnotChannel",
                pong_id: 0

            }),
            data: JSON.stringify({
                data: {id_guest: guest_id ,agree: "false"}
            })
        }));
	}
	}    
};


}

</script>
</script>