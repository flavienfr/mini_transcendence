<script type="text/template" id="play-template">
<%= stylesheet_link_tag "style-live-play.css" %>

<div class="container-fluid container-live-play">
	<div class="row">
        <div  class="col text-center">
            <h1>Le play pong</h1>
            <canvas id="pong" width="800px" height="600px" >
                ton navigateur ne supporte pas canvas...
            </canvas>
        </div>
    	<div id ="pong-area">
    <!-- <button type="button" id="sign_in" class="btn btn-primary btn-lg btn-block btn-dark" onclick="new_game(<%=current_user.id%>)">PLAY</button> -->
    </div>
	<div class="col chat" id="chat_area">
    </div>
</div>
<script>
var current = <%== current_user.id%>;//>

//--------------------------- set the canvas for the game----------------------------------------------//
var canvas;
var frame = 25;
var dbzTimer = Date.now();
var pause_gamer = false;
var limit_gamer = 0;
var pause = 0;
var gamer = 
{
    //position
    x : 0, 
    y : 0, 
    //form
    width : 10, 
    height : 0,
    color : "GREY",
    score : 0
}

function msg_canvas()
{
    context.fillStyle = "GREY";
    context.font = '48px serif';
    context.beginPath();
    context.fillText("No match..", canvas.width/2 * 0.7, canvas.height / 2);
    context.closePath();
}
function get_canvas()
{
    canvas = document.getElementById("pong");
    context = canvas.getContext("2d");
    canvas.style.cursor = "none";
    canvas.addEventListener("mousemove", movePaddle);
    canvas.addEventListener("mouseleave", triggerMouseOut);
    gamer.x = canvas.width - 10;
    gamer.y = canvas.height/2 - 100 /2;
    gamer.height = canvas.height/5;
    msg_canvas();
}

function movePaddle(event){ // function to permite to change the direction of the users paddle with the mouse
    if (pause_gamer != false)
    {
        limit_gamer = 0;
        pause  = 0;
        pause_gamer = false;
    }
    var rect = canvas.getBoundingClientRect();
    var result = 600 / (rect.bottom - rect.top);
    gamer.y = (event.clientY - rect.top -  20) * result;
}

function triggerMouseOut(event) {
    pause = 1;
}

//-------------------------------------------------------------------------//

async function add_to_list(id)
{
    console.log("join list");
    var selectElmt = document.getElementById("mode_match_making");
    var valeur = selectElmt.options[selectElmt.selectedIndex].value;
    var data = {
        user_id: id,
        game_type: valeur
    }
    await Backbone.ajax({
        url: "/players.json",
        data: JSON.stringify(data),
        type: 'post',
        dataType: 'json',
        contentType: 'application/json',
        success: async function(response) {
            await playercollection.fetch();
            listbtnview.setElement("#btn_match_making").render(); 
        },
        error: function(){
			alert("you cannot subscribe while you're playing another game");
        }
    }); 

}

async function  quit_list(id)
{
    console.log("quit list");
    await playercollection.fetch();
    var player = playercollection.findWhere({user_id: id});
    await Backbone.ajax({
			url: '/players/' + player.id + ".json",
			data: {},
			type: 'DELETE',
			dataType: 'json',
			success: function(response) {
                ladderview.render();
			},
			error: function(){
				alert("error");
			}
		});
}

//-------------------------------MAIN--------------------------------------//

get_canvas(canvas);
console.log("is tournamsent ? " + <%%= tournament %>);
socket_notif.onmessage = function(event) {// this function check every message, for know if the message is for her, it check the guest params, if the guest params correspond to the curent id the guest it for her  
    const response = event.data;
    const msg = JSON.parse(response);
	    if (msg.type == "ping" || !msg.message)// dont check the ping message
            return ;
      
        if (msg.message.data.id_guest == current && msg.message.data.play) // read the second for understand this
        {
            // if (msg.message.data.dbz == true)
        //{
            //var dbzTimer = Date.now();
            //dbzTimer = Date.now();
            
        //}
            playview.render();
            pongview.setElement("#pong-area").render(); // has the invitation is validate(value play is on true), the gamer is redirect to the gamerview
        }
};




</script>
</script>