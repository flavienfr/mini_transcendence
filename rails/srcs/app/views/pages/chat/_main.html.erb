<script type="text/template" id="chat_main-template">
	<input type="hidden" id="main_chat_in" value="<%%= receiver.id %>">
	<input type="hidden" id="chat_hidden_id" value="chat_<%%= receiver.id %>">
	<div class="main_chat_header">
		<a id="main_chat_to_create" >
			<svg width="2.25em" height="2.25em" viewBox="0 0 16 16" class="bi bi-plus-circle-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
				<path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z"/>
			</svg>
		</a>
	<%% if (receiver.scope && receiver.scope != "direct") {%>
	<div>
		<button id="show_chat_details" data-channel=<%%= receiver.id %>>group info</button>
	</div>
	<%% } %>
	<%% if (receiver.scope && receiver.scope == "direct") {%>
	<div>
		<a href="/#profile/<%%= target.id %>"><%%= target.name %></a>
	</div>
	<%% } %>
	<div class="dropdown">
		<button class="btn btn-secondary dropdown-toggle" onclick="ft_show_channels()" type="button" id="dropdownChannelMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><%%= receiver.scope == "direct" ? target.name : receiver.name %></button>
		<div class="dropdown-menu dropdown-menu-right" style="overflow-y:auto; height:auto; max-height: 200px;" aria-labelledby="dropdownChannelMenuButton">
			<div id="direct_msg_users" style="overflow-y:auto">
			</div>
		</div>
	</div>
	</div>
	<div class="main_chat_middle" id="conversation_window" style="overflow-y:auto">
	</div>
	<div class="main_chat_footer">
	<%% if (receiver.scope) {%>
	<div class="form-group">
		<textarea autofocus id="text_to_send" onkeydown="if(event.keyCode == 13) ft_send();" class="form-control" aria-label="With textarea"></textarea>
	</div>
	<div class="main_chat_footer_btn">
		<a id="main_chat_to_param" data-channel=<%%= receiver.id %>>
			<svg width="3.6em" height="2em" viewBox="0 0 16 16" class="bi bi-gear-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
				<path fill-rule="evenodd" d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 0 0-5.86 2.929 2.929 0 0 0 0 5.858z"/>
			</svg>
		</a>
		<button>Request game</button>
		<a id="chat" >
			<button id="post_msg" onclick="ft_send()" class="btn btn-primary btn-dark">Send</button>
		</a>
	</div>
	<%% } %>
	</div>
	<script type="text/javascript">
		<%% if (receiver && receiver.name) {%>
			var Message = Backbone.Model.extend({
				urlRoot: '/messages'
			});
			var message = new Message();
			message.fetch({
				data: {user_id: <%== current_user.id %>, receiver_id: <%%= receiver.scope == "direct" ? target.id : receiver.id %>, scope: '<%%= receiver.scope ? receiver.scope : "direct" %>'},
				success: function(data)
				{
					data = data.toJSON();
					var BlockUser = Backbone.Model.extend({
						urlRoot: '/block_users'
					});
					var block_user = new BlockUser();
					block_user.fetch({
						data: {user_id: <%== current_user.id %>},
						success: function(data2){
							data2 = data2.toJSON();
							if (data && data.messages && data.messages.length > 0)
							{
								var i = 0;
								$("#conversation_window").html("");
								while (i < data.messages.length)
								{
									if (data2[data.messages[i].user_id] != "blocked")
										$("#conversation_window").append("<div>[" + (data.guilds[data.messages[i].user_id] != "" ? data.guilds[data.messages[i].user_id] : "") + "]" + data.users[data.messages[i].user_id] + ":" + data.messages[i].text + "</div>");
									i++;
								}
							}
							else
								$("#conversation_window").html("");
						}
					});
				}
			});
		<%% } %>
		function ft_show_conversation(channel_or_user_selected)
		{
			if (channel_or_user_selected.scope == "protected-group")//protected
			{
				var ChannelParticipation = Backbone.Model.extend({
					urlRoot: '/channel_participations'
				});
				var channel_participation = new ChannelParticipation();
				channel_participation.fetch({
					data: {user_id: <%== current_user.id %>, receiver_id: channel_or_user_selected.id},
					success: function(data)
					{
						data = data.toJSON();
						if ($.isEmptyObject(data) || data.length == 0)//on met first cot√© rails mtn
						{
							var pwd = prompt("a password is needed");
							channel_participation = new ChannelParticipation();
							channel_participation.save(
							{
								user_id: <%== current_user.id %>,
								receiver_id: channel_or_user_selected.id,
								name: channel_or_user_selected.name,
								scope: channel_or_user_selected.scope,
								password: pwd
							},
							{
								success: function(data)
								{
									data = data.toJSON();
									if (data.res)
										chatview.setElement("#chat_area").render_chat_main(channel_or_user_selected);
									else
										alert("wrong password");
								}
							})
						}
						else
							chatview.setElement("#chat_area").render_chat_main(channel_or_user_selected);
					}
				});
				return;
			}
			//public
			var ChannelParticipation = Backbone.Model.extend({
				urlRoot: '/channel_participations'
			});
			var channel_participation = new ChannelParticipation();
			channel_participation.save(
			{
				user_id: <%== current_user.id %>,
				receiver_id: channel_or_user_selected.id,//quand c est user on envoie le user id de la personne a qui on parle et cote rails ca sera channel id dans participation
				name: channel_or_user_selected.name,
				scope: (channel_or_user_selected.scope ? channel_or_user_selected.scope : "direct")
			},
			{
				success: function(data)//data contiendra les datas de la requete aussi
				{
					chatview.setElement("#chat_area").render_chat_main(data.toJSON());//public donc on peut afficher directe
				}
			});
		}
		function ft_show_channels()
		{
			var Channel = Backbone.Model.extend({
				urlRoot: '/channels'
			});
			var channel = new Channel();
			channel.fetch({
				url: '/channels',
				success: function(data)
				{
					data = data.toJSON();
					show_div = $("#direct_msg_users");
					show_div.empty();
					if (data.channels_in && data.channels_in.length > 0)
					{
						show_div.append("<p>Channels In</p>");
						i = 0;
						while (i < data.channels_in.length)
						{
							show_div.append("<div style='display:flex;'><button class='dropdown-item' onclick='ft_show_conversation(" +
											JSON.stringify(data.channels_in[i]) + ")'>" +
											data.channels_in[i].name + " (" + data.channels_in[i].scope + ")" + "</button>" +
											"</div>");
							i++;
						}
					}
					if (data.users && data.users.length > 0)
					{
						show_div.append("<p>Users</p>");
						i = 0;
						while (i < data.users.length)
						{
							if (<%== current_user.id %> != data.users[i].id)
								show_div.append("<div style='display: flex;'><button class='dropdown-item' onclick='ft_show_conversation(" +
												JSON.stringify(data.users[i]) + ")'>" +
												data.users[i].name + "</button>" +
												"</div>");
							i++;
						}
					}
					if (data.channels_joignable && data.channels_joignable.length > 0)
					{
						show_div.append("<p>Channels Joignable</p>");
						i = 0;
						while (i < data.channels_joignable.length)
						{
							show_div.append("<div style='display: flex;'><button class='dropdown-item' onclick='ft_show_conversation(" +
											JSON.stringify(data.channels_joignable[i]) + ")'>" +
											data.channels_joignable[i].name + " (" + data.channels_joignable[i].scope + ")" + "</button>" +
											"</div>");
							i++;
						}
					}
				}
			});
		}
		function ft_send(){
			var text = $('#text_to_send').val();
			var receiver_id = <%%= receiver.scope == "direct" ? target.id : receiver.id %>;//cote rails target.id dans le cas direct permet de trouver la channel
			if (text.length == 0 || receiver_id == 0)
				return;
			$('#text_to_send').val('');
			var Message = Backbone.Model.extend({
				urlRoot: '/messages'
			});
			var message = new Message();
			message.save(
			{
				user_id: <%== current_user.id %>,
				text: text,
				scope: '<%%= receiver.scope ? receiver.scope : "direct" %>',
				receiver_id: receiver_id
			});
		};
	</script>
</script>