<script type="text/template" id="chat_param-template">
	<input type="hidden" id="chat_hidden_id" value="param_<%%= channel.id %>">
	<div class="param_chat_header">
		<a id="back_to_main_chat" onclick="ft_back_to_conversation()">
			X
		<% if false %>
			<svg width="2.25em" height="2.25em" viewBox="0 0 16 16" class="bi bi-x-circle-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
				<path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z"/>
	  		</svg>
		<% end %>
		</a>
		<h2>Parameter</h2>

	</div>

	<div class="param_chat_body">
		<%% if (channel.scope != "direct") { %>
			<div class="form-group">
				<button type="button" onclick="ft_leave()" class="btn btn-primary btn-md btn-block btn-dark">Leave the channel</button>
			</div>
		<%% } %>
		<div id="block_button_id">
		</div>

			<%% if (channel_participation.is_owner) { %>

			<div class="form-group">
				<label>Change channel status</label>
				<select class="form-control form-control-md" id="updateScope">
					<option>protected</option>
					<option>private</option>
					<option>public</option>
				</select>
			</div>

			<div class="form-group">
				<label>Password</label>
				<input type="password" id="parameterPassword" class="form-control" aria-describedby="passwordHelpBlock">
			</div>

			<div class="form-group">
				<button type="button" onclick="ft_update()" class="btn btn-primary mb-2 btn-dark">Apply</button>
			</div>

			<%% } %>
	</div>

	<div class="param_chat_footer">
	</div>
	<script>
		var channel = {};
		channel["id"] = <%%= channel.id %>;
		<%% if (channel.scope == "direct") { %>
			var BlockUser = Backbone.Model.extend({
				urlRoot: 'block_users'
			});
			var block_user = new BlockUser();
			block_user.fetch({
				data: {user_id: <%== current_user.id %>},
				success: function(data){
					data = data.toJSON();
					var block_button = $("#block_button_id");
					if (data[<%%= other_participation.user_id %>] == "blocked")
						block_button.append("<button type='button' onclick='ft_unblock()'>Unblock</button>");
					else
						block_button.append("<button type='button' onclick='ft_block()'>Block</button>");
				}
			});
		<%% } %>
		function ft_back_to_conversation()
		{
			chatview.render_chat_main(<%%= JSON.stringify(channel) %>);
		}
		function ft_leave()
		{
			var channel_participation = <%%= JSON.stringify(channel_participation) %>;
			var ChannelParticipation = Backbone.Model.extend({
				urlRoot: '/channel_participations'
			});
			var channel_participation = new ChannelParticipation(channel_participation);
			channel_participation.destroy({success: function(){
				var Notification = Backbone.Model.extend({
					urlRoot: '/notifications'
				});
				var notification = new Notification({
					from_user_id: <%== current_user.id %>,
					user_id: <%== current_user.id %>,
					table_type: "information",
					message: "you left group: " + "<%%= channel.name %>"
				});
				notification.save();
				chatview.render_chat_main();
			}});
		}
		function ft_update()
		{
			var scope = $("#updateScope").val();
			var pwd = $("#parameterPassword").val();
			if (scope == "protected" && pwd.length == 0)
			{
				Swal.fire({
					icon: "error",
					title: "Ooopsss",
					text: "a password is needed !"
				});
				return;
			}
			var Channel = Backbone.Model.extend({
				urlRoot: '/channels'
			});
			var channel = new Channel({id:<%%= channel.id %>});//use show of rails controller
			channel.fetch({
				success: function(data){
					data = data.toJSON();
					channel.set("scope", scope + "-group");
					if (scope == "protected")
						channel.set("password", pwd);
					channel.save({}, {
						success: function(){
							Swal.fire({
								icon: "success",
								title: "Great !",
								showConfirmButton: false,
								timer: 2000,
								text: "scope updated !"
							});
							$("#parameterPassword").val('');
						},
						error: function(data, xhr){
							Swal.fire({
								icon: "error",
								title: "Ooopsss",
								text: xhr.responseText,
								footer: xhr.statusText
							});
						}
					});
				}
			});
		}
		function ft_block()
		{
			var BlockUser = Backbone.Model.extend({
				urlRoot: '/block_users'
			});
			var block_user = new BlockUser();
			block_user.save(
			{//faire attention a ne pas avoir la possibilite de save plusieurs fois
				user_id: <%== current_user.id %>, block_user_id: <%%= other_participation.user_id %>
			},
			{
				success: function(){
					chatview.render_chat_param(channel);
				}
			});
		}
		function ft_unblock()
		{
			var BlockUser = Backbone.Model.extend({
				urlRoot: '/block_users'
			});
			var block_user = new BlockUser();
			block_user.fetch({
				data: {type: "find", user_id: <%== current_user.id %>, block_user_id: <%%= other_participation.user_id %>},
				success: function(data2){
					data2.destroy({
						success: function(){
							chatview.render_chat_param(channel);
						}
					});
				}
			});
		}
	</script>
</script>